<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/arm64_linux.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <script src="/static/vs/loader.js"></script>
</head>
<body>
    <h1>WebAssembliss (arm64_linux)</h1>
    <input type="button" id="runBtn" value="Run" onclick="runCode()" />
    <input type="button" id="resetBtn" value="Reset" onclick="clearOutput()" />
    <input type="button" id="saveBtn" value="Save" onclick='download_file("usrCode.S", getSource(), "text/plain")'  />
    <input type="button" id="loadBtn" value="Load" onclick="notImplemented()" disabled="true" />
    <input type="button" id="reportBtn" value="Report Error" onclick="notImplemented()" disabled="true" />
    <input type="button" id="showError" value="Show highlight line 15" onclick="exampleHighlight(15)" />
    <input type="button" id="hideHighlights" value="Remove all highlights" onclick="exampleHighlight(0)" disabled="true" />
    <div id="container" style="width:800px;height:600px;border:1px solid grey"></div>
    <div>
        <b>Debug Menu:</b>
        <input type="button" id="debugStart" value="start" onclick="startDebugger()" />
        <input type="button" id="debugContinue" value="continue" onclick="continueDebug()" disabled="true" />
        <input type="button" id="debugStep" value="step" onclick="stepDebug()" disabled="true" />
        <input type="button" id="debugBreakpoint" value="breakpoint" onclick="toggleBreakpoint()" disabled="true" />
        <input type="button" id="debugStop" value="stop" onclick="stopDebugger()"disabled="true" />
    </div>
    <br/>
    <table>
        <tr>
            <th>Run Status</th>
            <td>Done: <span id="runStatus">⭕</span></td>
            <td>Assembled: <span id="asStatus">⭕</span></td>
            <td>Linked: <span id="ldStatus">⭕</span></td>
            <td>Exited: <span id="execStatus">⭕</span></td>
            <td>Debugging: <span id="debugStatus">⭕</span></td>
        </tr>
        <tr>
            <th>Status Flags</th>
            <td>N: <span id="nFlag">⭕</span></td>
            <td>Z: <span id="zFlag">⭕</span></td>
            <td>C: <span id="cFlag">⭕</span></td>
            <td>V: <span id="vFlag">⭕</span></td>
        </tr>
    </table> 

    <h3>Input</h3>
    <textarea id="inputBox" name="inputBox" rows=5 cols=80 placeholder="type any input your code will use here"></textarea>

    <h3>Output</h3>
    <textarea id="outputBox" name="outputBox" readOnly=true rows=5 cols=80 placeholder="your output will appear here after your code finishes running..."></textarea>

    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide registers</button>
    <div class="collapsibleContent">
        <textarea id="regValues" name="regValues" readOnly=true rows=10 cols=100 placeholder="register values will appear here after your code finishes running..."></textarea>
        <p>Registers visualization notes:</p>
        <ul style="margin-top:-10px;">
            <li>values are shown in hex (e.g., 0a instead of 15);</li>
            <li>bytes are separated to help reading them (e.g., 01_00_20_30 instead of 01002030);</li>
            <li>registers that were modified during execution are highlighted;</li>
            <li>you can see all registers as hex without separation or highlighting in the "show all emulation information" pane.</li>
        </ul>
    </div> 

    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide memory</button>
    <div class="collapsibleContent">
        <textarea id="memValues" name="memValues" readOnly=true rows=10 cols=100 placeholder="memory values will appear here after your code finishes running..."></textarea>
        <p>Memory visualization notes:</p>
        <ul style="margin-top:-10px;">
            <li>values are shown in hex (e.g., 0a instead of 15);</li>
            <li>values that are printable by the ASCII table are shown as characters (e.g., 'A' instead of 41);</li>
            <li>all whitespace characters are kept as hex so you can tell them apart more easily (e.g., 20  09 instead of ' '  '&#09;');</li>
            <li>you can see *all* bytes as hex in the "show all emulation information" pane.</li>
        </ul>
    </div>

    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide error information</button>
    <div class="collapsibleContent">
        <textarea id="errorBox" name="errorBox" readOnly=true rows=10 cols=100 placeholder="any errors will appear here after your code finishes running..."></textarea>
    </div>
    
    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide all emulation information</button>
    <div class="collapsibleContent">
        <textarea id="emulationInfo" name="emulationInfo" readOnly=true rows=10 cols=100 placeholder="emulation info will appear here after your code finishes running..."></textarea>
       <input id="downloadButton" type="button" value="download as json" onclick='download_file("emulationInfo.json", getLastRunInfo(), "application/json")' disabled="true" />
    </div>

    <h3>ARM64 Assembly Reference</h3>
    <ul>
        <li><a target="_blank" rel="noopener noreferrer" href="https://developer.arm.com/documentation/102374/latest/">Official Documentation</a></li>
        <li><a target="_blank" rel="noopener noreferrer" href="https://www.cs.swarthmore.edu/~kwebb/cs31/resources/ARM64_Cheat_Sheet.pdf">Swarthmore College's ARM64 (AArch64) Reference Sheet</a></li>
        <li><a target="_blank" rel="noopener noreferrer" href="https://courses.cs.washington.edu/courses/cse469/19wi/arm64.pdf">University of Washington's ARMv8 A64 Quick Reference</a></li>
    </ul>

    <h3>Missing elements</h3>
    <ul>
        <li>Editor tabs for multi-file</li>
        <li>Menus so the user can customize view (e.g., which registers show, dark vs light theme)</li>
    </ul>

    <script src="{{ url_for('static', filename='js/arm64_linux.js') }}"></script>
    <script>createEditor({{ default_code }})</script>
</body>
</html>
