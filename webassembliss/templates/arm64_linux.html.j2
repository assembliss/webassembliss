{% extends "base.html.j2" %}

{% block title %} - ARM64{% endblock %}
{% block head %}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/arm64_linux.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
{% endblock %}
{% block tag %}
    &nbsp;
    <span class="badge bg-secondary-subtle border border-secondary-subtle text-secondary-emphasis rounded-pill">arm64</span>
{% endblock %}
{% block navbar %}
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            ARM64 Resources
        </a>
        <ul class="dropdown-menu">
            <li><a target="_blank" class="dropdown-item" rel="noopener noreferrer" href="https://developer.arm.com/documentation/102374/latest/">Official Documentation</a></li>
            <li><a target="_blank" class="dropdown-item" rel="noopener noreferrer" href="https://www.cs.swarthmore.edu/~kwebb/cs31/resources/ARM64_Cheat_Sheet.pdf">Swarthmore's Reference Sheet</a></li>
            <li><a target="_blank" class="dropdown-item" rel="noopener noreferrer" href="https://courses.cs.washington.edu/courses/cse469/19wi/arm64.pdf">UW's Quick Reference</a></li>
            <li><a target="_blank" class="dropdown-item" rel="noopener noreferrer" href="https://blog.xhyeax.com/2022/04/28/arm64-syscall-table/">Syscalls for ARM64 - Linux</a></li>
            <li><a target="_blank" class="dropdown-item" rel="noopener noreferrer" href="https://gpages.juszkiewicz.com.pl/syscalls-table/syscalls.html">Syscalls for many architectures</a></li>
        </ul>
    </li>
{% endblock %}
{% block content %}
    <input type="button" id="runBtn" value="Run" onclick="runCode()" />
    <input type="button" id="runBtn" value="CL Args" onclick="setCLArgs()" />
    <input type="button" id="resetBtn" value="Reset" onclick="clearOutput()" />
    <input type="button" id="saveBtn" value="Save" onclick="downloadCurrentTab()" />
    <input type="file" id="fileUpload" />
    <br/>
    <div id="tabsDiv" style="display: flex">
    <input class="activeTabBtn" type="button" id="tab1Btn" value="Tab1" onclick="openTab(1)"/>
    <input class="activeTabBtnX" type="button" id="tab1BtnX" value="x" onclick="closeTab(1)" disabled="true" hidden="hidden"/>
    <input class="tabBtn" type="button" id="addTabBtn" value="+" onclick="tabs.addTab()"/>
    </div>
    
    <div id="monaco-container" style="width:800px;height:600px;border:1px solid grey;border-top: 0px"></div>
    
    <div>
        <b>Debug Menu:</b>
        <input type="button" id="debugStart" value="start" onclick="startDebugger()" />
        <input type="button" id="debugContinue" value="continue" onclick="continueDebug()" disabled="true" />
        <input type="button" id="debugStep" value="step" onclick="stepDebug()" disabled="true" />
        <input type="button" id="debugBreakpoint" value="breakpoint" onclick="toggleBreakpoint()" disabled="true" />
        <input type="button" id="debugStop" value="stop" onclick="stopDebugger()"disabled="true" />
    </div>

    <div>
        <b>Emulation Trace Menu:</b>
        <input type="button" id="traceStart" value="Trace this!" onclick="startTracing()" />
        <input type="button" id="traceDownload" value="Download Tracing Information" onclick="downloadTracing()" disabled="true" />
        <input type="button" id="traceStop" value="Stop tracing" onclick="stopTracing()" disabled="true" />
        <div id="tracingProgressBarAria" class="progress" role="progressbar" aria-label="Emulation Tracing Progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
            <div id="tracingProgressBar" class="progress-bar bg-danger" style="width: 0%"></div>
        </div>
        <nav aria-label="Execution Trace Navigation" class="disabled">
            <ul class="pagination">
                <li class="page-item trace-actions trace-actions-back disabled">
                <a class="page-link" href="javascript:changeTracingStep(-Infinity)" aria-label="Beginning">
                    <span aria-hidden="true">&laquo;</span>
                </a>
                </li>
                <li class="page-item trace-actions trace-actions-back disabled">
                <a class="page-link" href="javascript:changeTracingStep(-1)" aria-label="Previous Step">
                    <span aria-hidden="true">&lt;</span>
                </a>
                </li>
                <li class="page-item trace-actions trace-actions-jump disabled"><a id="curTraceStepNum" class="page-link" href="#"> StepNum </a></li>
                <li class="page-item trace-actions trace-actions-forward disabled">
                <a class="page-link" href="javascript:changeTracingStep(1)" aria-label="Next Step">
                    <span aria-hidden="true">&gt;</span>
                </a>
                </li>
                <li class="page-item trace-actions trace-actions-forward disabled">
                <a class="page-link" href="javascript:changeTracingStep(Infinity)" aria-label="End">
                    <span aria-hidden="true">&raquo;</span>
                </a>
                </li>
            </ul>
        </nav>
    </div>
    <br/>
    <table>
        <tr>
            <th>Run Status</th>
            <td>Done: <span id="runStatus">⭕</span></td>
            <td>Assembled: <span id="asStatus">⭕</span></td>
            <td>Linked: <span id="ldStatus">⭕</span></td>
            <td>Exited: <span id="execStatus">⭕</span></td>
            <td>Debugging: <span id="debugStatus">⭕</span></td>
        </tr>
        <tr>
            <th>Status Flags</th>
            <td>N: <span id="nFlag">⭕</span></td>
            <td>Z: <span id="zFlag">⭕</span></td>
            <td>C: <span id="cFlag">⭕</span></td>
            <td>V: <span id="vFlag">⭕</span></td>
        </tr>
    </table> 

    <h3>Input</h3>
    <textarea id="inputBox" name="inputBox" rows=5 cols=80 placeholder="type any input your code will use here"></textarea>

    <h3>Output</h3>
    <textarea id="outputBox" name="outputBox" readOnly=true rows=5 cols=80 placeholder="your output will appear here after your code finishes running..."></textarea>

    <br/>
    <br/>

    <button type="button" class="collapsible">Feedback/Issue</button>
    <div class="feedbackCollapsible">
        <div>
            <textarea id="issueTitle" name="issueTitle" rows=1 cols=120 placeholder="Title (Required*)"></textarea>
            <textarea id="issueBody" name="issueBody" rows=10 cols=120 placeholder="Describe your feedback/issue... (Required*)"></textarea>

            <h3 style="margin: 0px">Add Labels:</h3>
            <input type="button" id="issueBugLabel" class="issueLabelButton" value="Bug" />
            <input type="button" id="issueHelpWantedLabel" class="issueLabelButton" value="Help Wanted" />
            <input type="button" id="issueEnhancementLabel" class="issueLabelButton" value="Enhancement" />
            <input type="button" id="issueQuestionLabel" class="issueLabelButton" value="Question" />
            <input type="button" id="issueInvalidLabel" class="issueLabelButton" value="Invalid" />
        </div>
        <div>
            <ul>
                <li>By pressing Submit, you will be brought to a GitHub Issues submit page.</li>
                <li>The info you fill out here will be autofilled on that page.</li>
                <li>Also, all emulation information will be appended to the bottom of the body.</li>
                <li style="color: red">Your source code will be appended to your issue. <b>Be sure you aren't sharing private code!</b></li>
            </ul>
            <input type="button" id="issueSubmit" value="Submit" style="background-color: rgb(255,100,255); width: 150px; height: 50px" onclick="submitIssue()" />

        </div>
    </div> 

    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide registers</button>
    <div class="collapsibleContent">
        <span>You can specify the registers you want to see (e.g., "x0 x5 cpsr") -></span>
        <textarea id="regsToShow" name="regsToShow" rows=1 cols=20 placeholder=""></textarea>
        <textarea id="regValues" name="regValues" readOnly=true rows=10 cols=100 placeholder="register values will appear here after your code finishes running..."></textarea>
        <p>Registers visualization notes:</p>
        <ul style="margin-top:-10px;">
            <li>values are shown in hex (e.g., 0a instead of 15);</li>
            <li>bytes are separated to help reading them (e.g., 01_00_20_30 instead of 01002030);</li>
            <li>registers that were modified during execution are highlighted;</li>
            <li>you can see all registers as hex without separation or highlighting in the "show all emulation information" pane.</li>
        </ul>
    </div> 

    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide memory</button>
    <div class="collapsibleContent">
        <textarea id="memValues" name="memValues" readOnly=true rows=10 cols=100 placeholder="memory values will appear here after your code finishes running..."></textarea>
        <p>Memory visualization notes:</p>
        <ul style="margin-top:-10px;">
            <li>values are shown in hex (e.g., 0a instead of 15);</li>
            <li>values that are printable by the ASCII table are shown as characters (e.g., 'A' instead of 41);</li>
            <li>all whitespace characters are kept as hex so you can tell them apart more easily (e.g., 20  09 instead of ' '  '&#09;');</li>
            <li>you can see *all* bytes as hex in the "show all emulation information" pane.</li>
        </ul>
    </div>

    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide error information</button>
    <div class="collapsibleContent">
        <textarea id="errorBox" name="errorBox" readOnly=true rows=10 cols=100 placeholder="any errors will appear here after your code finishes running..."></textarea>
    </div>
    
    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide all emulation information</button>
    <div class="collapsibleContent">
        <textarea id="emulationInfo" name="emulationInfo" readOnly=true rows=10 cols=100 placeholder="emulation info will appear here after your code finishes running..."></textarea>
       <input id="downloadButton" type="button" value="download as json" onclick='download_file("emulationInfo.json", getLastRunInfo(), "application/json")' disabled="true" />
    </div>

    <h3>Missing elements</h3>
    <ul>
        <li>Editor tabs for multi-file</li>
        <li>Menus so the user can customize view (e.g., which registers show, dark vs light theme)</li>
    </ul>

{% endblock %}

{% block scripts %}
    <script src="/static/vs/loader.js"></script>
    <script src="//cdn.jsdelivr.net/npm/protobufjs@7.4.0/dist/protobuf.min.js"></script>
    <script src="{{ url_for('static', filename='js/arm64_linux.js') }}"></script>
    <script>createEditor({{ default_code }})</script>
{% endblock %}
