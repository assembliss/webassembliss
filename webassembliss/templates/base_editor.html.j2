{% extends "base.html.j2" %}

{% block head %}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/base_editor.css') }}">
{% endblock %}

{% block tag %}
    &nbsp;
    <span class="badge bg-secondary-subtle border border-secondary-subtle text-secondary-emphasis rounded-pill">
    {% block archTag %}{% endblock %}
    </span>
{% endblock %}

{% block content %}
<div class="container">
 <div class="row">
  <div class="col-md-7 themed-grid-col">
    <button type="button" id="runBtn" class="btn btn-danger btn-sm codeActionBtn" onclick="runCode()"><i class="fa-solid fa-play"></i> Run Code</button>
    <button type="button" id="traceStart" class="btn btn-outline-danger btn-sm codeActionBtn" onclick="startTracing()"><i class="fa-solid fa-bug"></i> Trace Code</button>
    <button type="button" id="clargsBtn" class="btn btn-outline-secondary btn-sm codeActionBtn" onclick="setCLArgs()"><i class="fa-solid fa-gears"></i> Set CL Args</button>
    <button type="button" id="resetBtn" class="btn btn-outline-secondary btn-sm codeActionBtn" onclick="clearOutput()"><i class="fa-solid fa-rotate-left"></i> Reset</button>
    <button type="button" id="saveBtn" class="btn btn-outline-secondary btn-sm codeActionBtn" onclick="downloadCurrentTab()"><i class="fa-solid fa-download"></i> Save File</button>
    <input type="file" class="codeActionBtn" id="fileUpload" />
    <div id="tabsDiv" style="display: flex">
    <input class="activeTabBtn" type="button" id="tab1Btn" value="Tab1" onclick="openTab(1)"/>
    <input class="activeTabBtnX" type="button" id="tab1BtnX" value="x" onclick="closeTab(1)" disabled="true" hidden="hidden"/>
    <input class="tabBtn" type="button" id="addTabBtn" value="+" onclick="tabs.addTab()"/>
    </div>
    
    <div id="monaco-container" style="width:720px;height:500px;border:1px solid grey;border-top: 0px"></div>
    
    <div style="width: 720px;">
        <table style=" margin-left: auto; margin-right: auto;">
            <tr>
                <th>Run Status</th>
                <td>Done: <span id="runStatus">⭕</span></td>
                <td>Assembled: <span id="asStatus">⭕</span></td>
                <td>Linked: <span id="ldStatus">⭕</span></td>
                <td>Timed Out: <span id="timeOut">⭕</span></td>
                <td>Exit Code: <span id="exitCode">⭕</span></td>
            </tr>
            <tr id="statusFlagsDisplay" class="collapse">
            {% block statusFlags %}{% endblock %}
            </tr>
        </table> 
    </div>

    <div style="width: 720px;">
        <div id="traceMenuDiv" class="collapse">
            <div id="tracingProgressBarAria" class="progress" role="progressbar" aria-label="Emulation Tracing Progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                <div id="tracingProgressBar" class="progress-bar" style="width: 0%"></div>
            </div>

            <div class="text-center">
                <div class="btn-toolbar justify-content-between" role="toolbar" aria-label="Toolbar with buttons to interact with the tracing visualization">
                    <div class="btn-group" role="group" aria-label="Button to download the trace data">
                        <button type="button" id="traceDownload" class="btn btn-warning" onclick="downloadTracing()" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-title="Download the trace data as a json file" disabled="true">Download <i class="fa-solid fa-download"></i></button>
                    </div>
                    <div class="btn-group" role="group" aria-label="Controls to step forward or back in the trace">
                        <button type="button" class="btn btn-secondary trace-actions trace-actions-back" onclick="changeTracingStep(-Infinity)" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Go back to start of trace" disabled="true"><i class="fa-solid fa-backward-fast"></i> Reset</button>
                        <button type="button" class="btn btn-outline-secondary trace-actions trace-actions-back" onclick="changeTracingStep(-1)" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Go back one step" disabled="true"><i class="fa-solid fa-backward"></i> Back</button>
                        <button type="button" id="curTraceStepNum" class="btn" onclick="jumpToTracingStep()" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Current step; you can click on me to jump to a specific step number" disabled="true">Cur</button>
                        <button type="button" class="btn btn-outline-primary trace-actions trace-actions-forward" onclick="changeTracingStep(1)" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Advance one step" disabled="true">Next <i class="fa-solid fa-forward"></i></button>
                        <button type="button" class="btn btn-primary trace-actions trace-actions-forward" onclick="changeTracingStep(Infinity)" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Advance to end of trace" disabled="true">Last <i class="fa-solid fa-forward-fast"></i></button>
                    </div>
                    <div class="btn-group" role="group" aria-label="Button to stop tracing">
                        <button type="button" id="traceStop" class="btn btn-danger" onclick="stopTracing()" data-bs-toggle="tooltip" data-bs-placement="left" data-bs-title="End this tracing session and allow code to be edited" disabled="true">Stop <i class="fa-regular fa-circle-xmark"></i></button>
                    </div>
                </div>
                <div id="traceErrorMessageDiv"></div>
            </div>
        </div>
    </div>

    <h3>Input</h3>
    <textarea id="inputBox" name="inputBox" rows=2 cols=70 placeholder="type any input your code will use here"></textarea>

    <h3>Output</h3>
    <textarea id="outputBox" name="outputBox" readOnly=true rows=2 cols=70 placeholder="your output will appear here after your code finishes running..."></textarea>
  </div>
  <div class="col-6 col-md-5 themed-grid-col">
   <div class="tableFixHead">
   <small>
    <table id="regValuesTable" class="table table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">
                <i id="registerShowSelect" class="fa-solid fa-sliders" data-bs-toggle="tooltip" data-bs-title="Click here to select which registers are displayed." onclick='showDisplayCheckboxes("register")'></i>
                <i id="registerHideAll" class="fa-solid fa-toggle-off" data-bs-toggle="tooltip" data-bs-title="Click here to hide all registers." onclick='hideAllRows("register")' hidden></i>
                <i id="registerShowAll" class="fa-solid fa-toggle-on" data-bs-toggle="tooltip" data-bs-title="Click here to show all registers." onclick='showAllRows("register")' hidden></i>
                <i id="registerShowAccept" class="fa-solid fa-check" data-bs-toggle="tooltip" data-bs-title="Click here to save changes and hide unchecked registers." onclick='hideDisplayCheckboxes("register")' hidden></i>
                Register
                </th>
                <th scope="col">Value</th>
            </tr>
        </thead>
        <tbody id="regValuesTBody" class="regValues table-group-divider"></tbody>
    </table>
   </small>
   </div>

   <hr/>

   <small>
   <div class="tableFixHead">
    <div class="form-check form-switch form-check-reverse">
        <input class="form-check-input" type="checkbox" role="switch" id="asciiMemorySwitch" checked onclick='toggleASCIIMemory()' />
        <label class="form-check-label" for="switchCheckChecked">Show <span style="color: magenta;">ASCII</span> Characters</label>
    </div>
    {# Memory table assumes that memory chunks are 16 bytes. #}
    <table id="memValuesTable" class="table table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">
                    <i class="fa-regular fa-circle-question" data-bs-toggle="tooltip" data-bs-title="If an address does not appear, it has been hidden or it holds a value of 0."></i>
                    <i id="memoryShowSelect" class="fa-solid fa-sliders" data-bs-toggle="tooltip" data-bs-title="Click here to select which memory addresses are displayed." onclick='showDisplayCheckboxes("memory")'></i>
                    <i id="memoryHideAll" class="fa-solid fa-toggle-off" data-bs-toggle="tooltip" data-bs-title="Click here to hide all memory addresses." onclick='hideAllRows("memory")' hidden></i>
                    <i id="memoryShowAll" class="fa-solid fa-toggle-on" data-bs-toggle="tooltip" data-bs-title="Click here to show all memory addresses." onclick='showAllRows("memory")' hidden></i>
                    <i id="memoryShowAccept" class="fa-solid fa-check" data-bs-toggle="tooltip" data-bs-title="Click here to save changes and hide unchecked memory addresses." onclick='hideDisplayCheckboxes("memory")' hidden></i>
                    <br/>
                    Address
                </th>
                <th scope="col">+0</th>
                <th scope="col">+1</th>
                <th scope="col">+2</th>
                <th scope="col">+3</th>
                <th scope="col">+4</th>
                <th scope="col">+5</th>
                <th scope="col">+6</th>
                <th scope="col">+7</th>
                <th scope="col">+8</th>
                <th scope="col">+9</th>
                <th scope="col">+A</th>
                <th scope="col">+B</th>
                <th scope="col">+C</th>
                <th scope="col">+D</th>
                <th scope="col">+E</th>
                <th scope="col">+F</th>
            </tr>
        </thead>
        <tbody id="memValuesTBody" class="memValues table-group-divider">
            <td>Values will appear after code is ran or traced.</td>
        </tbody>
    </table>
   </small>
   </div>
  </div>
 </div>
 <hr/>
    <button type="button" class="collapsible">Show/hide error information</button>
    <div class="collapsibleContent">
        <textarea id="errorBox" name="errorBox" readOnly=true rows=10 cols=100 placeholder="any errors will appear here after your code finishes running..."></textarea>
    </div>
    
    <br/>
    <br/>

    <button type="button" class="collapsible">Show/hide all emulation information</button>
    <div class="collapsibleContent">
        <textarea id="emulationInfo" name="emulationInfo" readOnly=true rows=10 cols=100 placeholder="emulation info will appear here after your code finishes running..."></textarea>
       <input id="downloadButton" type="button" value="download as json" onclick='download_file("emulationInfo.json", getLastRunInfo(), "application/json")' disabled="true" />
    </div>

    <br/>
    <br/>

    <button type="button" class="collapsible">Feedback/Issue</button>
    <div class="feedbackCollapsible">
        <div>
            <textarea id="issueTitle" name="issueTitle" rows=1 cols=120 placeholder="Title (Required*)"></textarea>
            <textarea id="issueBody" name="issueBody" rows=10 cols=120 placeholder="Describe your feedback/issue... (Required*)"></textarea>

            <h3 style="margin: 0px">Add Labels:</h3>
            <input type="button" id="issueBugLabel" class="issueLabelButton" value="Bug" />
            <input type="button" id="issueHelpWantedLabel" class="issueLabelButton" value="Help Wanted" />
            <input type="button" id="issueEnhancementLabel" class="issueLabelButton" value="Enhancement" />
            <input type="button" id="issueQuestionLabel" class="issueLabelButton" value="Question" />
            <input type="button" id="issueInvalidLabel" class="issueLabelButton" value="Invalid" />
        </div>
        <div>
            <ul>
                <li>By pressing Submit, you will be brought to a GitHub Issues submit page.</li>
                <li>The info you fill out here will be autofilled on that page.</li>
                <li>Also, all emulation information will be appended to the bottom of the body.</li>
                <li style="color: red">Your source code will be appended to your issue. <b>Be sure you aren't sharing private code!</b></li>
            </ul>
            <input type="button" id="issueSubmit" value="Submit" style="background-color: rgb(255,100,255); width: 150px; height: 50px" onclick="submitIssue()" />

        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
    <script src="/static/vs/loader.js"></script>
    <script src="{{ url_for('static', filename='external/protobuf-7.4.0/protobuf-7.4.0.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/base_editor.js') }}"></script>
    {% block archScript %}{% endblock %}
    <script>createEditor({{ default_code }})</script>
    <script>localTabStorage.init()</script>
{% endblock %}
